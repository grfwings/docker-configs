---
services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    environment:
      - JELLYFIN_PublishedServerUrl=jellyfin.betweenzeroand.one
      - PUID=${USER_ID} 
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
    ports:
      - 8096:8096
    #network_mode: 'host'
    volumes:
      - jellyfin-config:/config 
      - jellyfin-cache:/cache 
      - type: bind
        source: /srv/jellyfin/media/
        target: /jellyfin/media/
        read_only: true
      - type: bind
        source: ./configs/jellyfin-web/config.json
        target: /jellyfin/jellyfin-web/config.json
    restart: unless-stopped
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent
    ports:
      - 8080:8080
    hostname: qbittorrent.internal
    environment:
      - PUID=${USER_ID} 
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
      - UMASK=002
      - WEBUI_PORTS=8080/tcp,8080/udp
      - VPN_ENABLED=true 
      - VPN_CONF=wg0 
      - VPN_PROVIDER=proton 
      - VPN_LAN_NETWORK=192.168.1.0/24 
      - VPN_LAN_LEAK_ENABLED=false
      - VPN_EXPOSE_PORTS_ON_LAN 
      - VPN_AUTO_PORT_FORWARD=true 
      - VPN_AUTO_PORT_FORWARD_TO_PORTS= 
      - VPN_KEEP_LOCAL_DNS=false 
      - VPN_FIREWALL_TYPE=auto 
      - VPN_HEALTHCHECK_ENABLED=true
      - PRIVOXY_ENABLED=false
      - UNBOUND_ENABLED=false 
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1 
      - net.ipv6.conf.all.disable_ipv6=1 
    devices:
      - /dev/net/tun:/dev/net/tun 
    volumes:
      - qbittorrent-config:/config
      - type: bind
        source: /srv/jellyfin/torrents/
        target: /jellyfin/torrents/
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
    volumes: 
      - lidarr-config:/config
      - type: bind
        source: /srv/jellyfin/
        target: /jellyfin/
    ports:
      - 8686:8686
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
    volumes:
      - radarr-config:/config
      - type: bind
        source: /srv/jellyfin/
        target: /jellyfin/
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
    volumes:
      - sonarr-config:/config
      - type: bind
        source: /srv/jellyfin/
        target: /jellyfin/
    ports:
      - 8989:8989
    restart: unless-stopped

  readarr:
    image: ghcr.io/hotio/readarr
    container_name: readarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
    volumes:
      - readarr-config:/config
      - type: bind
        source: /srv/jellyfin/
        target: /jellyfin/
    ports:
      - 8787:8787
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
    volumes:
      - prowlarr-config:/config
      - type: bind
        source: /srv/jellyfin/
        target: /jellyfin/
    ports:
      - 9696:9696
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    ports:
      - 8191:8191
    restart: unless-stopped

  jellyseerr:
    container_name: jellyseerr
    image: ghcr.io/hotio/jellyseerr
    ports:
      - 5055:5055
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID} 
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - jellyseerr-config:/config

  audiobookshelf:
    container_name: audiobookshelf
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - 13378:80
    environment:
      - PUID=${USER_ID} 
      - PGID=${GROUP_ID} 
      - TZ=${TIMEZONE}
    volumes:
      - type: bind
        source: /srv/jellyfin/torrents/audiobooks/
        target: /audiobooks/
      - type: bind
        source: /srv/audiobookshelf/podcasts/
        target: /podcasts/
      - type: bind
        source: /srv/audiobookshelf/config/
        target: /config/
      - type: bind
        source: /srv/audiobookshelf/metadata/
        target: /metadata/

volumes: 
  jellyfin-config:
  jellyfin-cache:
  lidarr-config:
  qbittorrent-config:
  gluetn-config:
  prowlarr-config:
  sonarr-config:
  readarr-config:
  radarr-config:
  jellyseerr-config:
